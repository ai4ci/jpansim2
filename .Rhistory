summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName))
1-mean(sqrt(rbeta(1000,5,5))*sqrt(rbeta(1000,5,5)) < runif(1000))
1-mean( sqrt(rbeta(1000,7.5,2.5))*sqrt(rbeta(1000,7.5,2.5)) < runif(1000) )
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName))
linelist = readr::read_csv("~/tmp/linelist.csv")
ggplot(linelist,aes(x=time,y=normalisedViralLoad,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(virionExposure=mean(virionExposure)),aes(x=time,y=virionExposure,colour = experimentName))+geom_line()
ggplot(linelist,aes(x=time,y=probabilityInfectiousToday))+geom_point(alpha=0.1)+facet_wrap(~experimentName)
# ggplot(linelist,aes(x=probabilityInfectiousToday,y=normalisedViralLoad))+geom_point(alpha=0.1)
ggplot(linelist,aes(x=probabilityInfectiousToday,fill=infectious))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")
ggplot(linelist,aes(x=probabilityInfectiousToday,fill=symptomatic))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName))+geom_line()
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist %>% filter(virionExposure > 0))+geom_density(aes(x=virionExposure, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")
linelist %>% group_by(behaviour) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName))
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName))
rt = readr::read_csv("~/tmp/rt-final.csv")
View(rt)
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
View(summary)
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName))
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,4))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,4))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,20))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,20))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,40))
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,4))
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName)) +
geom_point(data = summary,aes(x=ggoutbreak::as.time_period(time, unit="1 day"),y=rtEffective, colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName)) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,50))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,50))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,0.5))
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName)) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group = urn ))+geom_line()
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=experimentName:experimentReplica))+geom_line()
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
linelist = readr::read_csv("~/tmp/linelist.csv")
linelist %>% glimpse()
ggplot(linelist,aes(x=contactCount,colour=experimentName)) + geom_density()
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
tmp = linelist %>% group_by(experimentName,contactCount) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line()
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName,experimentReplica)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
ip %>% glimpse()
ip = readr::read_csv("~/tmp/ip.csv")
ip %>% glimpse()
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot,tau) %>%
summarise(probability = mean(probability))
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName,experimentReplica)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot,tau) %>%
summarise(probability = mean(probability))
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName,experimentReplica)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName, group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))
rlnorm(1000)
tmp1 = rlnorm(1000)
tmp2 = rlnorm(1000)
tmp1[tmp1<tmp2]
density(tmp1[tmp1<tmp2])
plot(density(tmp1[tmp1<tmp2]))
plot(density(tmp1))
plot(density(tmp1[tmp1<tmp2]))
plot(density(tmp1), density(tmp1[tmp1<tmp2]))
?plot
plot(density(tmp1[tmp1<tmp2]), par="xlog")
?par
plot(density(tmp1[tmp1<tmp2]), par("xlog"))
plot(density(tmp1[tmp1<tmp2]), par(xlog=TRUE))
?par
plot(density(tmp1[tmp1<tmp2]), log="x"
)
plot(density(tmp1[tmp1>tmp2]), log="x")
tmp2 = runif(1000)
tmp1 = rbeta(1000,1,9)
plot(density(tmp1[tmp1<tmp2]), log="x")

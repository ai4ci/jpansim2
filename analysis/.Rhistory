showLockdown = any(config %>% unnest(executionConfiguration) %>% pull(defaultPolicyModelName) == "Lockdown")
config %>% unnest(executionConfiguration) %>% pull(defaultPolicyModelName)
showLockdown = any(config %>% unnest(executionConfiguration) %>% pull(defaultPolicyModelName) == "ReactiveLockdown")
lockdownBackground = function(showTriggers = false) {
nExecutions = nrow(config)
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/nExecutions)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
# Trigger value
triggerValue = stringr::str_to_lower(stringr::str_replace_all(unique(config$executionConfiguration$lockdownTriggerValue),"_"," "))
triggerValue
if ((length(unique(summary$lockdownTrigger))>1) && showLockdown) {
pTrigger = ggplot(summary,groupedAes) +
lockdownBackground(showTriggers=TRUE)+
geom_line(aes(y=lockdownTrigger))+
ylab(triggerValue)+.gg_narrow()+.gg_hide_legend()+
coord_cartesian()
.gg_scale_y_percent()
} else {
pTrigger = NULL
}
pTrigger
simmary %>% glimpse()
summary %>% glimpse()
pTrigger+facet_grid(trigger~isolation)
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
lockdownBackground = function(showTriggers = FALSE) {
nExecutions = nrow(config)
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/nExecutions)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+facet_grid(trigger~isolation)
summary %>% glimpse()
table(summary$policy)
pIncidence+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="orange",  ReactiveLockdown.MONITOR="lightcyan"))
lockdownBackground = function(showTriggers = FALSE) {
nExecutions = nrow(config)
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/nExecutions*16)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="orange",  ReactiveLockdown.MONITOR="lightcyan"))
lockdownBackground = function(showTriggers = FALSE, facets=1) {
nExecutions = nrow(config)
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/nExecutions*facets)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
lockdownBackground = function(showTriggers = FALSE, facets=summary %>% n_groups()) {
nExecutions = nrow(config)
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/nExecutions*facets)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="orange",  ReactiveLockdown.MONITOR="lightcyan"))
ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="orange",  ReactiveLockdown.MONITOR="lightcyan"))
pOutbreakSize
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="orange",  ReactiveLockdown.MONITOR="lightcyan"))
pIncidence
nrow(config)
summary %>% n_groups()
summary %>% groups()
n_replicas = length(unique(summary$modelReplica))*length(unique(summary$experimentReplica))
n_replicas
lockdownBackground = function(showTriggers = FALSE, facets=summary %>% n_groups()) {
# nExecutions = nrow(config)
nReplicas = length(unique(summary$modelReplica))*length(unique(summary$experimentReplica))
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/nReplicas)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="orange",  ReactiveLockdown.MONITOR="lightcyan"))
ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="orange",  ReactiveLockdown.MONITOR="lightcyan"))
ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="red",  ReactiveLockdown.MONITOR="lightcyan"))
ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
lockdownBackground = function(showTriggers = FALSE, facets=summary %>% n_groups()) {
# nExecutions = nrow(config)
nReplicas = length(unique(summary$modelReplica))*length(unique(summary$experimentReplica))
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/nReplicas)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+facet_grid(trigger~isolation)+scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
.gg_pedantic(fontSize = 24,lineSize = 1,
legend.key.size = ggplot2::unit(1, "lines"),
axis.text = element_text(margin = margin(0,0,0,0))
)
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
library(gganimate)
library(ggpp)
.gg_pedantic(fontSize = 24,lineSize = 1,
legend.key.size = ggplot2::unit(1, "lines"),
axis.text = element_text(margin = margin(0,0,0,0))
)
choose_directory = function(caption = 'Select data directory') {
if (exists('utils::choose.dir')) {
choose.dir(caption = caption)
} else {
tcltk::tk_choose.dir(caption = caption)
}
directory = "~/tmp/test"
if (!exists("directory")) directory = choose_directory()
# tmp = load_csvs(directory,"ip")
# urns = c("default","trigger:5%to1%:isolation:mild","trigger:10%to2%:isolation:moderate")
# urns = tmp$experimentName
split_urn = function(urns) {
bind_rows(lapply(stringr::str_split(urns,":"), \(x) {
values = x[c(FALSE,TRUE)]
# deal with default values
if (length(x) < 2) return(NULL)
names(values) = x[c(TRUE,FALSE)]
return(as_tibble(as.list(values)))
}))
}
urn_groups = function(urns) {
unique(unlist(lapply(stringr::str_split(urns,":"), \(x) if (length(x) < 2) character() else x[c(TRUE,FALSE)])))
}
per_execution = c("modelName","modelReplica","experimentName","experimentReplica")
try_mutate = function(df,...) {
out = try({
df %>% mutate(...)
},silent = TRUE)
if (is.data.frame(out)) return(out)
if (class(out)=="try-error") return(df)
return(out)
}
load_csvs = function(directory, type = c("summary","contact-counts","ip","behaviours","final-state","test-positivity","debug")) {
type = match.arg(type)
files = fs::dir_ls(directory, recurse = TRUE)
files = files[stringr::str_ends(files,paste0(type,".csv"))]
listData = lapply(files, readr::read_csv, show_col_types = FALSE)
listData = purrr::keep(listData, ~ nrow(.x) > 0)
loaded = .cached(
dplyr::bind_rows(listData) %>%
try_mutate(split_urn(modelName)) %>%
try_mutate(split_urn(experimentName)) %>%
group_by(across(any_of(c(per_execution,urn_groups(.$modelName), urn_groups(.$experimentName))))),
files,
fs::file_info(files)$modification_time
)
return(loaded)
}
sanitise = function(strings) {
strings = stringr::str_replace_all(strings, "([A-Z][a-z])", " \\1")
strings = stringr::str_replace_all(strings, "_", " ")
strings = stringr::str_replace_all(strings, "\\s+", " ")
strings = stringr::str_to_lower(strings)
strings = trimws(strings)
return(strings)
}
# sanitise(c("CamelCase","CAMEL_CASE","variable_test"))
# urn_groups(tmp$experimentName)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),size=0.25)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
summary %>% glimpse()
summary$trigger %>% glimpse()
summary$trigger %>% unique()
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
nReplicas = length(unique(summary$modelReplica))*length(unique(summary$experimentReplica))
pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pTruePrevalence = ggplot(
summary %>% inner_join(config %>% unnest(setupConfiguration) %>% unnest(network) %>% select(networkSize)),
groupedAes
)+
lockdownBackground()+
geom_line(aes(y=infectedCount/networkSize))+
ylab("actual prevalence")+
.gg_scale_y_percent()+.gg_narrow()+.gg_hide_legend()
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
summary = summary %>% filter(
trigger %in% c("none","5%-1%")
) %>%
mutate(
trigger = factor(ifelse(trigger=="none","none","5%"),levels=c("none","5%")),
isolation =factor(isolation,levels=c("none","mild","moderate","severe"))
)
lockdownBackground = function(showTriggers = FALSE, replicas = nReplicas) {
# nExecutions = nrow(config)
if (showLockdown) {
triggers = config %>% unnest(executionConfiguration) %>% select(lockdownReleaseTrigger, lockdownStartTrigger, r0)
tmp = list(
geom_rect(data = summary, aes(!!!groupedAes, xmin=time-0.5,xmax=time+0.5,fill=policy),ymin=-Inf,ymax=Inf,alpha=1/replicas)
)
if (showTriggers) {
tmp = c(tmp,
geom_hline(data=triggers,aes(yintercept=lockdownStartTrigger), linetype = "dashed"),
geom_hline(data=triggers,aes(yintercept=lockdownReleaseTrigger), linetype = "dotted")
)
}
} else {
tmp = list()
}
tmp = c(tmp,scale_x_continuous(expand=c(0,0)))
return(tmp)
}
triggerValue = stringr::str_to_lower(stringr::str_replace_all(unique(config$executionConfiguration$lockdownTriggerValue),"_"," "))
pTrigger = ggplot(summary,groupedAes) +
lockdownBackground(showTriggers=TRUE)+
geom_line(aes(y=lockdownTrigger),alpha=1/nReplicas)+
ylab(triggerValue)+.gg_narrow()+.gg_hide_legend()+
coord_cartesian()
.gg_scale_y_percent()
pTrigger+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
summary = load_csvs(directory, "summary")
config$executionConfiguration$defaultBehaviourModelName
summary = load_csvs(directory, "summary")
summary = summary %>% filter(
trigger %in% c("none","5%-1%")
) %>%
mutate(
trigger = factor(ifelse(trigger=="none","none","5%"),levels=c("no lockdown","lockdown")),
isolation =factor(isolation,levels=c("none","mild","moderate","severe"))
)
directory = "/home/vp22681/Data/ai4ci/lockdown-compliance/"
summary = load_csvs(directory, "summary")
summary = summary %>% filter(
trigger %in% c("none","5%-1%")
) %>%
mutate(
trigger = factor(ifelse(trigger=="none","none","5%"),levels=c("no lockdown","lockdown")),
isolation =factor(isolation,levels=c("none","mild","moderate","severe"))
)
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
summary = load_csvs(directory, "summary")
summary = summary %>% filter(
trigger %in% c("none","5%-1%")
) %>%
mutate(
trigger = factor(ifelse(trigger=="none","no lockdown","lockdown"),levels=c("no lockdown","lockdown")),
isolation =factor(isolation,levels=c("none","mild","moderate","severe"))
)
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pHospitalBurden = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=hospitalisedCount))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+
geom_hline(data=popSize,aes(yintercept=networkSize/1000*UKBedsPer1000),linetype="dashed")+
geom_hline(data=popSize,aes(yintercept=networkSize/1000*GermanyBedsPer1000),linetype="dotted")+
ylab("hospital occupancy")
pHospitalBurden +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pHospitalBurden = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=hospitalisedCount))+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+
# geom_hline(data=popSize,aes(yintercept=networkSize/1000*UKBedsPer1000),linetype="dashed")+
# geom_hline(data=popSize,aes(yintercept=networkSize/1000*GermanyBedsPer1000),linetype="dotted")+
ylab("hospital occupancy")
pHospitalBurden +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pOutbreakSize = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=cumulativeInfections),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+
geom_hline(data=popSize,aes(yintercept=networkSize),linetype="dashed")+
ylab("total infections")
pOutbreakSize +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
summary %>% glimpse()
pHospitalBurden +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pHospitalBurden = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=hospitalisedCount),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+
# geom_hline(data=popSize,aes(yintercept=networkSize/1000*UKBedsPer1000),linetype="dashed")+
# geom_hline(data=popSize,aes(yintercept=networkSize/1000*GermanyBedsPer1000),linetype="dotted")+
ylab("hospital occupancy")
pHospitalBurden +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pMobility = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=averageMobility),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pMobility +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pDeaths = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=cumulativeDeaths),alpha=1/nReplicas)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+
ylab("deaths")
pDeaths +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
?scale_fill_manual
alphaLine = 1/(1+nReplicas/2)
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),alpha==alphaLine)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=incidence),alpha=alphaLine)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()
pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pX = pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pY = pOutbreakSize +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pX+pY+patchwork::plot_layout(ncol=1)+patchwork::plot_annotation(tag_levels = "A")
# ggplot(summary,groupedAes)+geom_line(aes(y=symptomaticCount, colour=experimentName))
pX+pY+patchwork::plot_layout(ncol=1, axes = "collect")+patchwork::plot_annotation(tag_levels = "A")
pOutbreakSize = ggplot(summary,groupedAes) +
lockdownBackground()+
geom_line(aes(y=cumulativeInfections),alpha=alphaLine)+
coord_cartesian(ylim=c(0,NA))+.gg_narrow()+.gg_hide_legend()+
geom_hline(data=popSize,aes(yintercept=networkSize),linetype="dashed")+
ylab("total infections")
pOutbreakSize +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pX = pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pY = pOutbreakSize +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pX+pY+patchwork::plot_layout(ncol=1, axes = "collect")+patchwork::plot_annotation(tag_levels = "A")
# ggplot(summary,groupedAes)+geom_line(aes(y=symptomaticCount, colour=experimentName))
pX = pIncidence+
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pY = pOutbreakSize +
facet_grid(trigger~isolation)+
scale_fill_manual(values = c(NoControl.DEFAULT="white", ReactiveLockdown.LOCKDOWN="#FF6000",  ReactiveLockdown.MONITOR="lightcyan"))
pXY = pX+pY+patchwork::plot_layout(ncol=1, axes = "collect")+patchwork::plot_annotation(tag_levels = "A")
# ggplot(summary,groupedAes)+geom_line(aes(y=symptomaticCount, colour=experimentName))
.gg_save_as(pXY, maxWidth = 15, maxHeight = 10, filename="~/tmp/p1.png")
.gg_save_as(pXY, maxWidth = 15, maxHeight = 15, filename="~/tmp/p1.png")
.gg_save_as(pX, maxWidth = 15, maxHeight = 8, filename="~/tmp/p1.png")

---
  title: "ABM output"
author: "Rob Challen"
date: "`r Sys.Date()`"
output: html_document
---



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)

# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))

``` 
  
  # Output of ABM.


```{r}
linelist = readr::read_csv("~/tmp/linelist.csv")

tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")

```


```{r}
ggplot(linelist,aes(x=time,y=normalisedViralLoad,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(contactExposure=mean(contactExposure)),aes(x=time,y=contactExposure,colour = experimentName))+geom_line()

# ggplot(linelist,aes(x=time,y=probabilityInfectiousToday))+geom_point(alpha=0.1)+facet_wrap(~experimentName)
# ggplot(linelist,aes(x=probabilityInfectiousToday,y=normalisedViralLoad))+geom_point(alpha=0.1)

# ggplot(linelist,aes(x=probabilityInfectiousToday,fill=infectious))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")
# ggplot(linelist,aes(x=probabilityInfectiousToday,fill=symptomatic))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")

ggplot(linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName))+geom_line()

ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)

ggplot(linelist %>% filter(contactExposure > 0))+geom_density(aes(x=contactExposure, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
ggplot(linelist %>% filter(normalisedViralLoad > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedViralLoad = max(normalisedViralLoad)))+geom_density(aes(x=normalisedViralLoad, colour=experimentName))

ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")

linelist %>% group_by(behaviour) %>% count()
```


```{r}
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))

ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")

summary %>% group_by(policy) %>% count()
```



```{r}

# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experimentName))) %>% group_by(boot,tau) %>%
  summarise(probability = mean(probability))

summary2 = summary %>% mutate(
    time = ggoutbreak::as.time_period(time, unit="1 day"),
    count = incidence) %>%
    group_by(experimentName,experimentReplica)

estimate = summary2 %>%
  ggoutbreak::poisson_locfit_model() %>%
  ggoutbreak::rt_from_incidence(ip)
  

summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName, group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
  geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))

```


```{r}
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()

ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
```

```{r}
contacts = readr::read_csv("~/tmp/contact.csv")
contacts %>% glimpse()

expected = demog %>% mutate(age = floor(age)) %>% group_by(age) %>%
  summarise(
    count = n()
  ) %>% 
  mutate(
    density = count/sum(count)
  )

expected = expected %>% cross_join(expected %>% rename_with(.fn = ~ paste0("contact",stringr::str_to_title(.x)))) %>%
  mutate(expected = density*contactDensity*nrow(contacts))

contact_matrix = contacts %>% 
  filter(experimentName == "strategy:ignore") %>%
  select(id,contactId) %>% 
  inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(age,id), by="id") %>%
  inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(contactAge = age,contactId=id), by="contactId") %>%
  mutate(age = floor(age), contactAge=floor(contactAge)) %>%
  group_by(age,contactAge) %>%
  count()

tmp = contact_matrix %>% inner_join(expected %>% select(age,contactAge,expected), by = join_by(age, contactAge)) %>%
  mutate(contactRR = n/expected)

ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()+scale_fill_viridis_c(limits=c(0.5, 2), oob=scales::squish)

```


```{r}
settings = jsonlite::fromJSON("~/tmp/result-settings.json")


```
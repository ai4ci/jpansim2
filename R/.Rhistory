ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.01)
contacts = readr::read_csv("~/tmp/contact.csv")
contacts %>% glimpse()
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.01)
contacts = readr::read_csv("~/tmp/contact.csv")
contacts %>% glimpse()
contact_matrix = contacts %>%
filter(experimentName == "strategy:ignore") %>%
select(id,contactId) %>%
inner_join(demog %>% select(age,id) %>% filter(experimentName == "strategy:ignore"), by="id") %>%
inner_join(demog %>% select(contactAge = age,contactId=id) %>% filter(experimentName == "strategy:ignore"), by="contactId") %>%
mutate(age = floor(age), contactAge=floor(contactAge)) %>%
group_by(age,contactAge) %>%
count()
contact_matrix = contacts %>%
filter(experimentName == "strategy:ignore") %>%
select(id,contactId) %>%
inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(age,id), by="id") %>%
inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(contactAge = age,contactId=id), by="contactId") %>%
mutate(age = floor(age), contactAge=floor(contactAge)) %>%
group_by(age,contactAge) %>%
count()
contact_matrix %>% glimpse()
ggplot(contact_matrix, aes(x=age,y=contactAge,fill=n)) %>% geom_rect()
ggplot(contact_matrix, aes(x=age,y=contactAge,fill=n))+geom_rect()
ggplot(contact_matrix, aes(x=age,y=contactAge,fill=n))+geom_tile()
ggplot(demog,aes(x=age))+geom_density()
demog %>% mutate(age = floor(age)) %>% group_by(age) %>%
summarise(
count = n(),
density = n() / sum(count)
) %>% glimpse()
demog %>% mutate(age = floor(age)) %>% group_by(age) %>%
summarise(
count = n()
) %>%
mutate(
density = count/sum(count)
) %>%
glimpse()
expected = demog %>% mutate(age = floor(age)) %>% group_by(age) %>%
summarise(
count = n()
) %>%
mutate(
density = count/sum(count)
)
?toupper
expected %>% cross_join(expected %>% rename_with(.fn = ~ paste0("contact",stringr::str_to_title(.x)))) %>%
glimpse()
expected = expected %>% cross_join(expected %>% rename_with(.fn = ~ paste0("contact",stringr::str_to_title(.x)))) %>%
mutate(expected = density*contactDesity*nrow(contacts))
expected = expected %>% cross_join(expected %>% rename_with(.fn = ~ paste0("contact",stringr::str_to_title(.x)))) %>%
mutate(expected = density*contactDensity*nrow(contacts))
tmp = contact_matrix %>% inner_join(expected %>% select(age,contactAge,expected)) %>%
mutate(contactRR = n/expected)
ggplot(contact_matrix, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()
ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()
?scale_fill_continuous
ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()+scale_fill_viridis_c(limits=c(0.5, 1.5), oob=scales::squish)
ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()+scale_fill_viridis_c(limits=c(0.5, 2.5), oob=scales::squish)
ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()+scale_fill_viridis_c(limits=c(0.5, 2), oob=scales::squish)
plot(loess(y~x, data=tibble(x=c(0,10,25,40,60,70), y=c(2,0.5,1.5,0.5,1,0.5))))
loess(y~x, data=tibble(x=c(0,10,25,40,60,70), y=c(2,0.5,1.5,0.5,1,0.5)))
loess.smooth(x=c(0,10,25,40,60,70), y=c(2,0.5,1.5,0.5,1,0.5))
plot(loess.smooth(x=c(0,10,25,40,60,70), y=c(2,0.5,1.5,0.5,1,0.5)))
plot(smooth(x=c(0,10,25,40,60,70), y=c(2,0.5,1.5,0.5,1,0.5)))
plot(smooth.spline(x=c(0,10,25,40,60,70), y=c(2,0.5,1.5,0.5,1,0.5)))
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.01)
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.01)
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
contacts = readr::read_csv("~/tmp/contact.csv")
contacts %>% glimpse()
expected = demog %>% mutate(age = floor(age)) %>% group_by(age) %>%
summarise(
count = n()
) %>%
mutate(
density = count/sum(count)
)
expected = expected %>% cross_join(expected %>% rename_with(.fn = ~ paste0("contact",stringr::str_to_title(.x)))) %>%
mutate(expected = density*contactDensity*nrow(contacts))
contact_matrix = contacts %>%
filter(experimentName == "strategy:ignore") %>%
select(id,contactId) %>%
inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(age,id), by="id") %>%
inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(contactAge = age,contactId=id), by="contactId") %>%
mutate(age = floor(age), contactAge=floor(contactAge)) %>%
group_by(age,contactAge) %>%
count()
tmp = contact_matrix %>% inner_join(expected %>% select(age,contactAge,expected), by = join_by(age, contactAge)) %>%
mutate(contactRR = n/expected)
ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()+scale_fill_viridis_c(limits=c(0.5, 2), oob=scales::squish)
ggplot(demog,aes(x=age))+geom_density()
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experiment))) %>% group_by(boot,tau) %>%
summarise(probability = mean(probability))
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName,experimentReplica)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName, group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
ggplot(linelist,aes(x=time,y=normalisedViralLoad,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(virionExposure=mean(virionExposure)),aes(x=time,y=virionExposure,colour = experimentName))+geom_line()
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(contactExposure=mean(contactExposure)),aes(x=time,y=contactExposure,colour = experimentName))+geom_line()
ggplot(linelist,aes(x=time,y=probabilityInfectiousToday))+geom_point(alpha=0.1)+facet_wrap(~experimentName)
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName))+geom_line()
ggplot(linelist %>% filter(virionExposure > 0))+geom_density(aes(x=virionExposure, colour=experimentName))
ggplot(linelist %>% filter(contactExposure > 0))+geom_density(aes(x=contactExposure, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
ip = readr::read_csv("~/tmp/ip.csv")
?ggoutbreak::rt_from_incidence
ip = ip %>% mutate(boot = as.integer(as.factor(experimentName))) %>% group_by(boot,tau) %>%
summarise(probability = mean(probability))
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName,experimentReplica)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName, group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
settings = jsonlite::read_json("~/tmp/result-settings.json")
settings = jsonify::from_json("~/tmp/result-settings.json")
View(settings)
settings = jsonify::from_json("~/tmp/result-settings.json",simplify = FALSE)
settings = jsonlite::fromJSON("~/tmp/result-settings.json")
?jsonlite::fromJSON
settings = jsonlite::fromJSON("~/tmp/result-settings.json", flatten = FALSE)
View(settings)
settings = jsonlite::fromJSON("~/tmp/result-settings.json")
View(settings)
settings$setupConfiguration
class(settings$setupConfiguration)
settings = jsonlite::fromJSON("~/tmp/result-settings.json",flatten = FALSE)
settings$setupConfiguration
class(settings$setupConfiguration)
class(settings$executionConfiguration)
settings$executionConfiguration
settings$executionConfiguration$contactProbability
knitr::opts_chunk$set(echo = TRUE)
here::i_am("supporting-relationships.qmd")
library(tidyverse)
logit = function(p) {return(log(p/(1-p)))}
expit = function(x) {return(1/(1+exp(-x)))}
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
library(reshape2)
library(dplyr)
library(ggplot2)
opt=theme(legend.position="none",
panel.background = element_rect(fill="white"),
panel.grid=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text=element_blank())
hilbert = function(m,n,r) {
for (i in 1:n)
{
tmp=cbind(t(m), m+nrow(m)^2)
m=rbind(tmp, (2*nrow(m))^r-tmp[nrow(m):1,]+1)
}
melt(m) %>% plyr::rename(c("Var1" = "x", "Var2" = "y", "value"="order")) %>% arrange(order)}
# Original
ggplot(hilbert(m=matrix(1), n=1, r=2), aes(x, y)) + geom_path()+ opt
ggplot(hilbert(m=matrix(1), n=2, r=2), aes(x, y)) + geom_path()+ opt
ggplot(hilbert(m=matrix(1), n=3, r=2), aes(x, y)) + geom_path()+ opt
ggplot(hilbert(m=matrix(1), n=4, r=2), aes(x, y)) + geom_path()+ opt
ggplot(hilbert(m=matrix(1), n=5, r=2), aes(x, y)) + geom_path()+ opt
ggplot(hilbert(m=matrix(1), n=6, r=2), aes(x, y)) + geom_path()+ opt
# # Changing order
# ggplot(hilbert(m=matrix(.5), n=5, r=2), aes(x, y)) + geom_path()+ opt
# ggplot(hilbert(m=matrix(0), n=5, r=2), aes(x, y)) + geom_path()+ opt
# ggplot(hilbert(m=matrix(tan(1)), n=5, r=2), aes(x, y)) + geom_path()+ opt
# ggplot(hilbert(m=matrix(3), n=5, r=2), aes(x, y)) + geom_path()+ opt
# ggplot(hilbert(m=matrix(-1), n=5, r=2), aes(x, y)) + geom_path()+ opt
# ggplot(hilbert(m=matrix(log(.1)), n=5, r=2), aes(x, y)) + geom_path()+ opt
# ggplot(hilbert(m=matrix(-15), n=5, r=2), aes(x, y)) + geom_path()+ opt
# ggplot(hilbert(m=matrix(-0.001), n=5, r=2), aes(x, y)) + geom_path()+ opt
# # Polygons
# ggplot(hilbert(m=matrix(log(1)), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(.5), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(tan(1)), n=5, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-15), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-25), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(0), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(1000000), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-1), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-.00001), n=4, r=2), aes(x, y)) + geom_polygon()+ opt
# # Changing exponent
# gplot(hilbert(m=matrix(log(1)), n=4, r=-1), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(.5), n=4, r=-2), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(tan(1)), n=4, r=6), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-15), n=3, r=sin(2)), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-25), n=4, r=-.0001), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(0), n=4, r=200), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(1000000), n=3, r=.5), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-1), n=4, r=sqrt(2)), aes(x, y)) + geom_polygon()+ opt
# ggplot(hilbert(m=matrix(-.00001), n=4, r=52), aes(x, y)) + geom_polygon()+ opt
# # Polar coordinates
# ggplot(hilbert(m=matrix(1), n=4, r=2), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(-1), n=5, r=2), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(.1), n=2, r=.5), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(1000000), n=2, r=.1), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(.25), n=3, r=3), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(tan(1)), n=5, r=1), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(1), n=4, r=1), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(log(1)), n=3, r=sin(2)), aes(x, y)) + geom_polygon()+ coord_polar()+opt
# ggplot(hilbert(m=matrix(-.0001), n=4, r=25), aes(x, y)) + geom_polygon()+ coord_polar()+opt
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(contactExposure=mean(contactExposure)),aes(x=time,y=contactExposure,colour = experimentName))+geom_line()
ggplot(linelist %>% filter(contactExposure > 0))+geom_density(aes(x=contactExposure, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
ggplot(linelist %>% filter(normalisedViralLoad > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedViralLoad = max(normalisedViralLoad)))+geom_density(aes(x=normalisedViralLoad, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
ggplot(linelist %>% filter(normalisedViralLoad > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedViralLoad = max(normalisedViralLoad)))+geom_density(aes(x=normalisedViralLoad, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
ggplot(linelist %>% filter(normalisedViralLoad > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedViralLoad = max(normalisedViralLoad)))+geom_density(aes(x=normalisedViralLoad, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
settings = jsonlite::fromJSON("~/tmp/result-settings.json")
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName)) + geom_line() + scale_x_continuous(trans="log1p")
ggplot(linelist,aes(x=time,y=normalisedViralLoad,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(contactExposure=mean(contactExposure)),aes(x=time,y=contactExposure,colour = experimentName))+geom_line()
# ggplot(linelist,aes(x=time,y=probabilityInfectiousToday))+geom_point(alpha=0.1)+facet_wrap(~experimentName)
# ggplot(linelist,aes(x=probabilityInfectiousToday,y=normalisedViralLoad))+geom_point(alpha=0.1)
# ggplot(linelist,aes(x=probabilityInfectiousToday,fill=infectious))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")
# ggplot(linelist,aes(x=probabilityInfectiousToday,fill=symptomatic))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName))+geom_line()
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist %>% filter(contactExposure > 0))+geom_density(aes(x=contactExposure, colour=experimentName))
ggplot(linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity)))+geom_density(aes(x=normalisedSeverity, colour=experimentName))
ggplot(linelist %>% filter(normalisedViralLoad > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedViralLoad = max(normalisedViralLoad)))+geom_density(aes(x=normalisedViralLoad, colour=experimentName))
ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")
linelist %>% group_by(behaviour) %>% count()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")
summary %>% group_by(policy) %>% count()
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
contacts = readr::read_csv("~/tmp/contact.csv")
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
contacts = readr::read_csv("~/tmp/contact.csv")
contacts = readr::read_csv("~/tmp/contacts.csv")
contacts %>% glimpse()
expected = demog %>% mutate(age = floor(age)) %>% group_by(age) %>%
summarise(
count = n()
) %>%
mutate(
density = count/sum(count)
)
expected = expected %>% cross_join(expected %>% rename_with(.fn = ~ paste0("contact",stringr::str_to_title(.x)))) %>%
mutate(expected = density*contactDensity*nrow(contacts))
contact_matrix = contacts %>%
filter(experimentName == "strategy:ignore") %>%
select(id,contactId) %>%
inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(age,id), by="id") %>%
inner_join(demog %>% filter(experimentName == "strategy:ignore") %>% select(contactAge = age,contactId=id), by="contactId") %>%
mutate(age = floor(age), contactAge=floor(contactAge)) %>%
group_by(age,contactAge) %>%
count()
tmp = contact_matrix %>% inner_join(expected %>% select(age,contactAge,expected), by = join_by(age, contactAge)) %>%
mutate(contactRR = n/expected)
ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()+scale_fill_viridis_c(limits=c(0.5, 2), oob=scales::squish)
contact_matrix = contacts %>%
select(id,contactId) %>%
inner_join(demog %>% select(age,id), by="id") %>%
inner_join(demog %>% select(contactAge = age,contactId=id), by="contactId") %>%
mutate(age = floor(age), contactAge=floor(contactAge)) %>%
group_by(age,contactAge) %>%
count()
tmp = contact_matrix %>% inner_join(expected %>% select(age,contactAge,expected), by = join_by(age, contactAge)) %>%
mutate(contactRR = n/expected)
ggplot(tmp, aes(x=age,y=contactAge,fill=contactRR))+geom_tile()+scale_fill_viridis_c(limits=c(0.5, 2), oob=scales::squish)

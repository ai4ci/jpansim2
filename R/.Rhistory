maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = 1-sum(normalisedSeverity>severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = 1-sum(normalisedSeverity>severitySymptomsCutoff)/n(),
infectionFatalityRatio = 1-sum(normalisedSeverity>severitySymptomsCutoff)/n()
)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = 1-sum(normalisedSeverity>severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = 1-sum(normalisedSeverity>severityHospitalisationCutoff)/n(),
infectionFatalityRatio = 1-sum(normalisedSeverity>severityDeathCutoff)/n()
)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,modelName,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName, group=interaction(modelName,experimentName) )) + geom_line() + scale_x_continuous(trans="log1p")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% filter(normalisedSeverity > 0) %>% group_by(personId,modelName,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity))
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
ggplot()+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity))
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
maxSeverity = linelist %>% filter(infectious) %>% group_by(personId,modelName,experimentName) %>% summarise(normalisedSeverity = max(normalisedSeverity))
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
)
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
linelist = readr::read_csv("~/tmp/linelist.csv")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
0.002938517/0.238698
0.0002260398/0.238698
linelist = readr::read_csv("~/tmp/linelist.csv")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")+facet_wrap(~interaction(experimentName,experimentReplica))
summary %>% group_by(policy) %>% count()
dnorm(8,5,2)
pnorm(8,5,2)
qnorm(0.95,5,2)
tmp = linelist %>% group_by(contactCount,modelName,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName, group=interaction(modelName,experimentName) )) + geom_line() + scale_x_continuous(trans="log1p")
linelist = readr::read_csv("~/tmp/linelist.csv")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
) %>% mutate(
caseFatalityRatio = infectionFatalityRatio / infectionCaseRatio,
caseHospitalisationRatio = infectionHospitalisationRatio / infectionCaseRatio,
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
linelist = readr::read_csv("~/tmp/linelist.csv")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
) %>% mutate(
caseFatalityRatio = infectionFatalityRatio / infectionCaseRatio,
caseHospitalisationRatio = infectionHospitalisationRatio / infectionCaseRatio,
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")+facet_wrap(~interaction(experimentName,experimentReplica))
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experimentName))) %>% group_by(boot,tau) %>%
summarise(probability = mean(probability))
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName,experimentReplica)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName, group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))+
coord_cartesian(ylim=c(0,4))
estimate %>% ggoutbreak::plot_growth_rate(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica)))+coord_cartesian(ylim=c(-0.2,0.2))
summary2 %>% ggoutbreak::plot_counts(mapping = aes(colour=experimentName, group=interaction(experimentName,experimentReplica)))
estimate %>% ggoutbreak::plot_rt(mapping = aes(colour=experimentName,group=interaction(experimentName,experimentReplica))) +
geom_point(data = summary,aes(x=as.Date(ggoutbreak::as.time_period(time, unit="1 day")),y=rtEffective, colour=experimentName))+
coord_cartesian(ylim=c(0,4))
settings = jsonlite::fromJSON("~/tmp/result-settings.json")
settings$executionConfiguration
settings$executionConfiguration$rO
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")+facet_wrap(~interaction(experimentName,experimentReplica))
summary %>% group_by(policy) %>% count()
linelist = readr::read_csv("~/tmp/linelist.csv")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
) %>% mutate(
caseFatalityRatio = infectionFatalityRatio / infectionCaseRatio,
caseHospitalisationRatio = infectionHospitalisationRatio / infectionCaseRatio,
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
) %>% mutate(
caseFatalityRatio = infectionFatalityRatio / infectionCaseRatio,
caseHospitalisationRatio = infectionHospitalisationRatio / infectionCaseRatio,
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
View(cutoffs)
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
) %>% mutate(
caseFatalityRatio = infectionFatalityRatio / infectionCaseRatio,
caseHospitalisationRatio = infectionHospitalisationRatio / infectionCaseRatio,
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
View(cutoffs)
linelist = readr::read_csv("~/tmp/linelist.csv")
cutoffs = readr::read_csv("~/tmp/debug.csv")
maxSeverity = linelist %>% group_by(personId,modelName,experimentName) %>% summarise(
infectious = any(infectious),
normalisedSeverity = max(normalisedSeverity)
) %>% filter(infectious)
maxSeverity %>% inner_join(cutoffs) %>% group_by(modelName,experimentName) %>% summarise(
infectionCaseRatio = sum(normalisedSeverity>=severitySymptomsCutoff)/n(),
infectionHospitalisationRatio = sum(normalisedSeverity>=severityHospitalisationCutoff)/n(),
infectionFatalityRatio = sum(normalisedSeverity>=severityDeathCutoff)/n()
) %>% mutate(
caseFatalityRatio = infectionFatalityRatio / infectionCaseRatio,
caseHospitalisationRatio = infectionHospitalisationRatio / infectionCaseRatio,
)
ggplot(maxSeverity)+geom_density(aes(x=normalisedSeverity, colour=experimentName, group = interaction(modelName,experimentName)))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severitySymptomsCutoff))+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityHospitalisationCutoff), linetype="dashed")+
geom_vline(data=cutoffs,aes(colour = experimentName, xintercept=severityDeathCutoff), linetype="dotted")+facet_wrap(~experimentName,ncol=1,scales = "free_y")
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testNegatives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives/(testPositives+testNegatives), colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=rtEffective, colour=experimentName, group=interaction(experimentName,experimentReplica)))+geom_line()+coord_cartesian(ylim=c(0,5))
ggplot(summary,aes(x=time,fill=as.factor(policy),colour=as.factor(policy),y=1))+geom_bar(stat="identity")+facet_wrap(~interaction(experimentName,experimentReplica))
summary %>% group_by(policy) %>% count()
# ip = ggoutbreak::make_gamma_ip(median_of_mean = 7, median_of_sd = 4)
ip = readr::read_csv("~/tmp/ip.csv")
ip = ip %>% mutate(boot = as.integer(as.factor(experimentName))) %>% group_by(boot,tau) %>%
summarise(probability = mean(probability))
summary2 = summary %>% mutate(
time = ggoutbreak::as.time_period(time, unit="1 day"),
count = incidence) %>%
group_by(experimentName,experimentReplica)
estimate = summary2 %>%
ggoutbreak::poisson_locfit_model() %>%
ggoutbreak::rt_from_incidence(ip)
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,modelName,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName, group=interaction(modelName,experimentName) )) + geom_line() + scale_x_continuous(trans="log1p")
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
ggplot(demog,aes(x=hilbertX,y=hilbertY))+geom_tile()
linelist %>% fliter(time == 50) %>% glimpse()
linelist %>% filter(time == 50) %>% glimpse()
snap = linelist %>% filter(time==50) %>% inner_join(demog, by=c(experimentName,modelName,experimentReplica,modelReplica,personId=id))
snap = linelist %>% filter(time==50) %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId=id))
snap = linelist %>% filter(time==50) %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY, fill=infectious))+geom_tile()
ggplot(snap,aes(x=hilbertX,y=hilbertY, fill=probabilityInfectiousToday))+geom_tile()
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(aes(colour=infectious))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.2)
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)
snap = linelist %>% filter(time==5) %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)
snap = linelist %>% filter(time==15) %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)
snap = linelist %>% filter(time==25) %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)
snap = linelist %>% filter(time==26) %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)
install.packages("gganimate")
snap = linelist %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
library(gganimate)
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)+
transition_time(time = time)+
ggtitle('{frame}/{nframes}')
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName))+geom_line()
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")
linelist = readr::read_csv("~/tmp/linelist.csv")
demog = readr::read_csv("~/tmp/demog.csv")
ggplot(demog,aes(x=age))+geom_density()
ggplot(demog,aes(x=age,y=mobilityBaseline))+geom_point(alpha=0.1)
ggplot(demog,aes(x=hilbertX,y=hilbertY))+geom_tile()
snap = linelist %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)+
transition_time(time = time)+
ggtitle('{frame}/{nframes}')
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
linelist = readr::read_csv("~/tmp/linelist.csv")
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
snap = linelist %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)+
transition_time(time = time)+
ggtitle('{frame}/{nframes}')
log(2)
linelist = readr::read_csv("~/tmp/linelist.csv")
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
snap = linelist %>% inner_join(demog, by=join_by(experimentName,modelName,experimentReplica,modelReplica,personId==id))
ggplot(snap,aes(x=hilbertX,y=hilbertY))+
geom_tile(aes(fill=probabilityInfectiousToday))+
geom_point(data = snap %>% filter(infectious), aes(colour=infectious),size=0.5)+
transition_time(time = time)+
ggtitle('{frame}/{nframes}')
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName))+geom_line()
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)+
geon_line(data = linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName), colour="red")
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)+
geom_line(data = linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName), colour="red")
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)+
geom_line(data = linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName), inherit.aes = FALSE, colour="red")
ggplot(linelist,aes(x=presumedLocalPrevalence,y=contactExposure))+geom_point()
ggplot(linelist,aes(x=time,y=normalisedViralLoad,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(contactExposure=mean(contactExposure)),aes(x=time,y=contactExposure,colour = experimentName))+geom_line()
# ggplot(linelist,aes(x=time,y=probabilityInfectiousToday))+geom_point(alpha=0.1)+facet_wrap(~experimentName)
# ggplot(linelist,aes(x=probabilityInfectiousToday,y=normalisedViralLoad))+geom_point(alpha=0.1)
# ggplot(linelist,aes(x=probabilityInfectiousToday,fill=infectious))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")
# ggplot(linelist,aes(x=probabilityInfectiousToday,fill=symptomatic))+geom_density(alpha=0.4)+facet_wrap(~experimentName,scales = "free_y")
ggplot(linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName))+geom_line()
ggplot(linelist,aes(x=time,y=presumedLocalPrevalence,group=personId))+geom_line(alpha=0.01)+facet_wrap(~experimentName)+
geom_line(data = linelist %>% group_by(time,experimentName) %>% summarise(presumedLocalPrevalence=mean(presumedLocalPrevalence)),aes(x=time,y=presumedLocalPrevalence,colour = experimentName), inherit.aes = FALSE, colour="red")
ggplot(linelist %>% filter(contactExposure > 0))+geom_density(aes(x=contactExposure, colour=experimentName))
ggplot(linelist %>% filter(normalisedViralLoad > 0) %>% group_by(personId,experimentName) %>% summarise(normalisedViralLoad = max(normalisedViralLoad)))+geom_density(aes(x=normalisedViralLoad, colour=experimentName))
ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")
linelist %>% group_by(behaviour) %>% count()
ggplot(linelist,aes(x=presumedLocalPrevalence,y=contactExposure))+geom_point()
linelist = readr::read_csv("~/tmp/linelist.csv")
ggplot(linelist %>% filter(contactExposure>0),aes(x=presumedLocalPrevalence,y=contactExposure))+geom_point(alpha=0.1)
ggplot(linelist %>% filter(contactExposure>0),aes(x=presumedLocalPrevalence))+geom_density()
ggplot(linelist,aes(x=presumedLocalPrevalence,colour=I(contactExposure>0)))+geom_density()
ggplot(linelist,aes(x=presumedLocalPrevalence,colour=(contactExposure>0)))+geom_density()
ggplot(linelist,aes(x=probabilityInfectionsToday, y=infectious))+geom_point()
ggplot(linelist,aes(x=probabilityInfectiousToday, y=infectious))+geom_point()
ggplot(linelist,aes(x=probabilityInfectiousToday, colour=infectious))+geom_density()
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
library(gganimate)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
linelist = readr::read_csv("~/tmp/linelist.csv")
tmp = linelist %>% group_by(contactCount,modelName,experimentName) %>% count()
ggplot(tmp,aes(x=contactCount, y=n/sum(n),colour=experimentName, group=interaction(modelName,experimentName) )) + geom_line() + scale_x_continuous(trans="log1p")
ggplot(linelist,aes(x=time,fill=as.factor(behaviour),colour=as.factor(behaviour)))+geom_bar()+facet_wrap(~experimentName,scales = "free_y")
knitr::opts_chunk$set(echo = TRUE)
here::i_am("abm-output.qmd")
library(tidyverse)
library(gganimate)
# install.packages(
#   c("odin","odin.dust","dust"),
#   repos = c("https://mrc-ide.r-universe.dev", "https://cloud.r-project.org"))
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
summary = readr::read_csv("~/tmp/summary.csv")
ggplot(summary,aes(x=time,y=incidence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeInfections, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=symptomaticCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=hospitalisedCount, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=cumulativeDeaths, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=infectedCount/10000, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()+ylab("actual prevalence")
ggplot(summary,aes(x=time,y=averageMobility, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=averageCompliance, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=presumedTestPositivePrevalence, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
ggplot(summary,aes(x=time,y=testPositives, colour=experimentName, group=interaction(modelName,modelReplica,experimentName,experimentReplica)))+geom_line()
